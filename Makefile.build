#
# Copyright (C) 2008 Freescale Semiconductor, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

SIMICS=simics
DTC_DIR := ../dtc
LIBFDT_DIR := $(DTC_DIR)/libfdt
LIBOS_INC := ../libos/include
LIBOS_BIN := bin/libos
LIBOS_CLIENT_H := include/libos-client.h

CC=$(CROSS_COMPILE)gcc
#CC_OPTS=-m32 -nostdinc -Wa,-me500
GCCINCDIR := $(shell $(CC) -print-file-name=include)
CC_OPTS=-m32 -Wa,-me500 -nostdinc -I $(GCCINCDIR) -I $(GCCINCDIR)-fixed \
        -Iinclude -Ibin/include -I$(LIBFDT_DIR) -I$(LIBOS_INC) -g \
        -std=gnu99  -include $(LIBOS_CLIENT_H)

CC_OPTS_NODEP := -include config/autoconf.h

CC_OPTS_C= -Wall \
  -Wundef \
  -Wstrict-prototypes \
  -Wno-trigraphs \
  -fno-strict-aliasing \
  -fno-common \
  -O2 \
  -msoft-float \
  -pipe \
  -ffixed-r2 \
  -mmultiple \
  -mno-altivec \
  -funit-at-a-time \
  -mno-string \
  -fomit-frame-pointer \
  -Werror \
  -include include/libfdt_env.h
CC_OPTS_ASM=-D_ASM -Ibin/src -include $(LIBOS_BIN)/assym.s
LD=$(CROSS_COMPILE)ld
LD_OPTS=-Wl,-m -Wl,elf32ppc -Wl,-Bstatic -nostdlib -msoft-float
MKDIR=mkdir -p
KCONFIG=y

TDGEN_DIR := tools/tdgen
include $(TDGEN_DIR)/Makefile.tdgen

HOSTCC=gcc
HOSTCC_OPTS=-g -std=gnu99
HOSTCC_OPTS_C= -Wall \
  -Wundef \
  -Wstrict-prototypes \
  -Wno-trigraphs \
  -O2 \
  -I $(HEADERS_DIR) \
  -I $(GEN_HEADERS_DIR) \
  -I $(LIBOS_INC)

-include include/config/auto.conf

all: bin/uv.uImage bin/uv.map

.PRECIOUS: bin/include/%.d
bin/include/%.d : include/%.h
	@$(MKDIR) $(@D)
	$(LIBOS_DIR)/confdep "$<" "$<" >> "$@"

LIBFDT_objdir := src
include $(LIBFDT_DIR)/Makefile.libfdt
include $(LIBOS_DIR)/Makefile.libos

LIBOS_SRC := $(LIBOS_STARTUP) $(LIBOS_FSL_BOOKE_TLB) $(LIBOS_EXCEPTION) \
             $(LIBOS_LIB) $(LIBOS_CONSOLE) $(LIBOS_MP) \
             $(LIBOS_MPIC) $(libos-src-y)

hv-src-y := interrupts.c trap.c events.c vpic.c init.c guest.c tlb.c emulate.c \
            timers.c paging.c hcalls.c devtree.c elf.c vmpic.c gspr.c misc.S

hv-src-$(CONFIG_BYTE_CHAN) += byte_chan.c
hv-src-$(CONFIG_BCMUX) += bcmux.c
hv-src-$(CONFIG_IPI_DOORBELL) += ipi_doorbell.c
hv-src-$(CONFIG_GDB_STUB) += gdb-stub.c
hv-src-$(CONFIG_SHELL) += shell.c
hv-src-$(CONFIG_PAMU) += pamu.c

SRCS := $(LIBOS_SRC:%=$(LIBOS_DIR)/%) $(hv-src-y:%=src/%) \
	$(LIBFDT_SRCS:%=$(LIBFDT_DIR)/%)

OBJS := $(basename $(LIBOS_SRC:%=libos/%) $(hv-src-y:%=%))
OBJS := $(OBJS:%=%.o) $(LIBFDT_OBJS:%=libfdt/%)
OBJS := $(OBJS:%=bin/%)
HDRS := $(shell find include -path 'include/config' -prune -o -name '*.h' -print)

bin/uv.uImage: bin/uv.bin
	mkimage -A ppc -O linux -T kernel -C none -a 00000000 -e 00000000 -d $< $@

bin/uv.bin.gz: bin/uv.bin
	gzip -f $<

bin/uv.bin: bin/uv
	$(CROSS_COMPILE)objcopy -O binary $< $@

bin/uv: include/config/auto.conf $(OBJS)
	$(CC) $(LD_OPTS) -Wl,-Tuv.lds -o $@ $(OBJS) -lgcc

bin/gdb-stub.d : src/gdb-stub.c bin/include/e500mc-data.h

# compile and gen dependecy file
.PRECIOUS: bin/%.d
bin/%.d : src/%.c
	@$(MKDIR) $(@D)
	OBJ=`echo $@ | sed 's/\.d$$/\.o/'` && \
	$(CC) -M $(CC_OPTS) $(CC_OPTS_C) -MF "$@" -MT "$$OBJ" $< && \
	$(LIBOS_DIR)/confdep "$<" "$$OBJ" >> "$@"

bin/%.o : src/%.c bin/%.d
	$(CC) $(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C) -c -o "$@" $<

bin/%.d : src/%.S $(LIBOS_BIN)/assym.s 
	@$(MKDIR) $(@D)
	OBJ=`echo "$@" | sed 's/\.d$$/\.o/'` && \
	$(CC) -M $(CC_OPTS) $(CC_OPTS_ASM) -MF "$@" -MT "$$OBJ" $< && \
	$(LIBOS_DIR)/confdep "$<" "$$OBJ" >> "$@"

bin/%.o : src/%.S bin/%.d
	$(CC) $(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_ASM) -c -o $@ $<

.PRECIOUS: bin/libfdt/%.d
bin/libfdt/%.d : $(LIBFDT_DIR)/%.c
	@$(MKDIR) $(@D)
	OBJ=`echo "$@" | sed 's/\.d$$/\.o/'` && \
	$(CC) -M $(CC_OPTS) $(CC_OPTS_C) -MF "$@" -MT "$$OBJ" $< && \
	$(LIBOS_DIR)/confdep "$<" "$$OBJ" >> "$@"

bin/libfdt/%.o : $(LIBFDT_DIR)/%.c bin/libfdt/%.d
	$(CC) $(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C) -c -o $@ $<

bin/%.dtb : %.dts
	@$(MKDIR) $(@D)
	$(DTC_DIR)/dtc -p 1024 -O dtb $< -o $@

# include the dependecy files
-include bin/libos/libos_assym.d
-include $(HDRS:include/%.h=bin/include/%.d)
-include $(OBJS:%.o=%.d)

bin/uv.map: bin/uv
	nm -n bin/uv > $@

.PHONY: test-gdb test-hello test-msgsnd test-vmpic test-linux-1p test-linux-2p

test-gdb: bin/uv.uImage test/gdb
	$(SIMICS) test/gdb/hv-gdb.simics

test-hello: bin/uv.uImage test/hello
	$(SIMICS) test/hello/hv-hello.simics

test-msgsnd: bin/uv.uImage test/msgsnd
	$(SIMICS) test/msgsnd/hv-msgsnd.simics

test-vmpic: bin/uv.uImage test/vmpic
	$(SIMICS) test/vmpic/hv-vmpic.simics

test-vmpic-coreint: bin/uv.uImage test/vmpic
	$(SIMICS) test/vmpic/hv-vmpic-coreint.simics

test-linux-1p: bin/uv.uImage test/linux
	$(SIMICS) test/linux/hv-linux-1p.simics

test-linux-intmap: bin/uv.uImage test/linux
	$(SIMICS) test/linux/hv-linux-intmap.simics

test-partman: bin/uv.uImage test/linux
	make -C test/linux rootfs
	$(SIMICS) test/linux/hv-partman.simics

test-linux-2p: bin/uv.uImage test/linux
	$(SIMICS) test/linux/hv-linux-2p.simics

test-ipi-1p: bin/uv.uImage test/ipi
	$(SIMICS) test/ipi/hv-ipi.simics

test-ipi-2p: bin/uv.uImage test/ipi
	$(SIMICS) test/ipi/hv-ipi-2p.simics

test-ipi-coreint: bin/uv.uImage test/ipi
	$(SIMICS) test/ipi/hv-ipi-coreint.simics

test-fit: bin/uv.uImage test/fit
	$(SIMICS) test/fit/hv-fit.simics

test-byte-chan: bin/uv.uImage test/byte-chan
	$(SIMICS) test/byte-chan/hv-byte_chan.simics

test-whoami: bin/uv.uImage test/whoami
	$(SIMICS) test/whoami/hv-whoami.simics

test-hcalls: bin/uv.uImage test/hcalls
	$(SIMICS) test/hcalls/hv-hcalls.simics

test-mmu: bin/uv.uImage test/mmu
	$(SIMICS) test/mmu/mmu.simics

test-pmr: bin/uv.uImage test/pmr
	$(SIMICS) test/pmr/hv-pmr.simics

test-dma: bin/uv.uImage test/dma
	$(SIMICS) test/dma/hv-dma.simics

demo: bin/uv.uImage test/linux
	$(SIMICS) test/linux/hv-demo.simics

.PHONY: FORCE test
test/%: FORCE
	make -C $@

test:
	make -C $@

docs:
	doxygen doc/Doxyfile
