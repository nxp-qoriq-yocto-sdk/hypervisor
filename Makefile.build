#
# Copyright (C) 2008 Freescale Semiconductor, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

export SIMICS=simics
export MKDIR=mkdir -p
export DTC := dtc

export DTC_DIR := $(src)dtc
export LIBFDT_DIR := $(DTC_DIR)/libfdt
LIBOS_BIN := bin/libos
LIBOS_CLIENT_H := $(src)include/libos-client.h
export libos := $(src)libos/

export CC=$(CROSS_COMPILE)gcc
#CC_OPTS=-m32 -nostdinc -Wa,-me500
export GCCINCDIR := $(shell $(CC) -print-file-name=include)
CC_OPTS=-m32 -Wa,-me500 -nostdinc -I $(GCCINCDIR) -I $(GCCINCDIR)-fixed \
        -I$(src)include -Ibin/include -I$(libos)include -I$(LIBFDT_DIR) \
        -I$(LIBOS)/include-libc -std=gnu99  -include $(LIBOS_CLIENT_H)

export CC_OPTS_NODEP := -include include/config/autoconf.h

export CC_OPTS_C= -Wall \
  -Wundef \
  -Wstrict-prototypes \
  -Wno-trigraphs \
  -fno-strict-aliasing \
  -fno-common \
  -O2 -g3 \
  -msoft-float \
  -pipe \
  -ffixed-r2 \
  -mmultiple \
  -mno-altivec \
  -funit-at-a-time \
  -mno-string \
  -fomit-frame-pointer \
  -Werror \
  -include libfdt_env.h

export CC_OPTS_ASM=-D_ASM -include $(LIBOS_BIN)/assym.s
export LD=$(CROSS_COMPILE)ld
export LD_OPTS=-Wl,-m -Wl,elf32ppc -Wl,-Bstatic -nostdlib -msoft-float
export KCONFIG=y

TDGEN_DIR := $(src)tools/tdgen
include $(TDGEN_DIR)/Makefile.tdgen

HOSTCC=gcc
HOSTCC_OPTS=-g -std=gnu99
HOSTCC_OPTS_C= -Wall \
  -Wundef \
  -Wstrict-prototypes \
  -Wno-trigraphs \
  -O2 \
  -I $(HEADERS_DIR) \
  -I $(GEN_HEADERS_DIR) \
  -I $(LIBOS_INC)

include include/config/auto.conf

all: bin/hv.uImage bin/hv.map

bin/include/%.d : $(src)include/%.h
	@$(MKDIR) $(@D)
	$(call show,mkdep: $(<:$(src)%=%))
	$(V)$(libos)lib/confdep $< $< > $@

include $(LIBFDT_DIR)/Makefile.libfdt
include $(libos)lib/Makefile.libos
include $(src)tools/partman/Makefile

.PHONY: partman
partman: bin/linux/partman

hv-src-y := interrupts.c trap.c events.c vpic.c init.c guest.c tlb.c emulate.c \
            timers.c paging.c hcalls.c devtree.c elf.c uimage.c vmpic.c \
            gspr.c misc.S livetree.c ipi_doorbell.c

hv-src-$(CONFIG_BYTE_CHAN) += byte_chan.c
hv-src-$(CONFIG_BCMUX) += bcmux.c
hv-src-$(CONFIG_GDB_STUB) += gdb-stub.c
hv-src-$(CONFIG_SHELL) += shell.c
hv-src-$(CONFIG_PAMU) += pamu.c
hv-src-$(CONFIG_VIRTUAL_I2C) += i2c.c
hv-src-early-$(CONFIG_TLB_CACHE) += tlbmiss.S

#LIBFDT_SRCS := fdt.c fdt_ro.c fdt_sw.c fdt_strerror.c

OBJS := $(basename $(libos-src-first-y:%=libos/%) \
                   $(libos-src-early-y:%=libos/%) \
                   $(hv-src-early-y) \
                   $(libos-src-y:%=libos/%) $(hv-src-y) \
                   $(LIBFDT_SRCS:%=libfdt/%))
OBJS := $(OBJS:%=bin/%.o)
HDRS := $(shell cd $(src); find include -name '*.h' -print)

bin/hv.uImage: bin/hv.bin
	mkimage -A ppc -O linux -T kernel -C none -a 00000000 -e 00000000 -d $< $@

bin/hv.bin.gz: bin/hv.bin
	gzip -f $<

bin/hv.bin: bin/hv
	$(CROSS_COMPILE)objcopy -O binary $< $@

bin/hv: include/config/auto.conf $(OBJS)
	$(call show,link: $@)
	$(V)$(CC) $(LD_OPTS) -Wl,-T$(src)hv.lds -o $@ $(OBJS) -lgcc

bin/gdb-stub.d : $(src)src/gdb-stub.c bin/include/e500mc-data.h

bin/%.d : $(src)src/%.c
	$(call mkdep,CC,$(CC_OPTS) $(CC_OPTS_C))

bin/%.o : $(src)src/%.c bin/%.d
	$(call build,CC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C))

bin/%.d : $(src)src/%.S bin/libos/assym.s
	$(call mkdep,CC,$(CC_OPTS) $(CC_OPTS_ASM))

bin/%.o : $(src)src/%.S bin/%.d
	$(call build,CC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_ASM))

bin/libfdt/%.d : $(LIBFDT_DIR)/%.c
	$(call mkdep,CC,$(CC_OPTS) $(CC_OPTS_C))

bin/libfdt/%.o : $(LIBFDT_DIR)/%.c bin/libfdt/%.d
	$(call build,CC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C))

# include the dependecy files
ifneq ($(MAKECMDGOALS),clean)
-include bin/libos/libos_assym.d
-include $(HDRS:include/%.h=bin/include/%.d)
-include $(OBJS:%.o=%.d)
endif

bin/hv.map: bin/hv
	nm -n bin/hv > $@

.PHONY: FORCE
FORCE:

test-%: bin/hv.uImage FORCE
	@$(MKDIR) test
	@$(MAKE) -C test -f $(src)test/Makefile $*

test: FORCE
	@$(MKDIR) test
	$(MAKE) -C test -f $(src)test/Makefile

lib:
	$(SIMICS) -q -e 'echo (resolve-file "%simics%" + sim->host_arch + "-" + sim->host_os + "/lib"); quit' | tail -1

docs:
	doxygen doc/Doxyfile
