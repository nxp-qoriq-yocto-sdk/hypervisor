#
# Copyright © 2007 Freescale Semiconductor, Inc
# Copyright © 1999 Paul D. Smith
#
#
# The env var $CROSS_COMPILE should be set to powerpc-unknown-linux-gnu-
#

SIMICS=simics
CROSS_COMPILE=powerpc-e500mc-linux-gnu-
DTC_DIR := ../dtc
LIBFDT_DIR := $(DTC_DIR)/libfdt
LIBOS_INC := ../libos/include
LIBOS_BIN := bin/libos
LIBOS_CLIENT_H := include/libos-client.h

CC=$(CROSS_COMPILE)gcc
#CC_OPTS=-m32 -nostdinc -Wa,-me500
CC_OPTS=-m32 -Wa,-me500 -Iinclude -I$(LIBFDT_DIR) -I$(LIBOS_INC) -g \
        -std=gnu99  -include $(LIBOS_CLIENT_H)

CC_OPTS_C= -Wall \
  -Wundef \
  -Wstrict-prototypes \
  -Wno-trigraphs \
  -fno-strict-aliasing \
  -fno-common \
  -O2 \
  -msoft-float \
  -pipe \
  -ffixed-r2 \
  -mmultiple \
  -mno-altivec \
  -funit-at-a-time \
  -mno-string \
  -fomit-frame-pointer \
  -Werror
CC_OPTS_ASM=-D_ASM -Ibin/src
LD=$(CROSS_COMPILE)ld
LD_OPTS=-Wl,-m -Wl,elf32ppc -Wl,-Bstatic -nostdlib -msoft-float
GENASSYM=$(LIBOS_DIR)/tools/genassym.sh
MKDIR=mkdir -p

-include include/config/auto.conf

all: bin/uv.uImage bin/uv.map

LIBFDT_objdir := src
include $(LIBFDT_DIR)/Makefile.libfdt
include $(LIBOS_DIR)/Makefile.libos

LIBOS_SRC := $(LIBOS_STARTUP) $(LIBOS_FSL_BOOKE_TLB) $(LIBOS_EXCEPTION) \
             $(LIBOS_LIB) $(LIBOS_CONSOLE) $(LIBOS_MP) \
             $(LIBOS_MPIC) $(libos-src-y)

hv-src-y := interrupts.c trap.c events.c vpic.c init.c guest.c tlb.c emulate.c \
            timers.c paging.c hcalls.c devtree.c elf.c vmpic.c misc.S

hv-src-$(CONFIG_BYTE_CHAN) += byte_chan.c
hv-src-$(CONFIG_BCMUX) += bcmux.c
hv-src-$(CONFIG_IPI_DOORBELL) += ipi_doorbell.c
hv-src-$(CONFIG_GDB_STUB) += gdb-stub.c
hv-src-$(CONFIG_SHELL) += shell.c

SRCS := $(LIBOS_SRC:%=$(LIBOS_DIR)/%) $(hv-src-y:%=src/%) \
	$(LIBFDT_SRCS:%=$(LIBFDT_DIR)/%)

OBJS := $(basename $(LIBOS_SRC:%=libos/%) $(hv-src-y:%=%))
OBJS := $(OBJS:%=%.o) $(LIBFDT_OBJS:%=libfdt/%)
OBJS := $(OBJS:%=bin/%)

$(SRCS) $(OBJS) bin/uv: include/config/auto.conf

bin/uv.uImage: bin/uv.bin
	mkimage -A ppc -O linux -T kernel -C none -a 00000000 -e 00000000 -d $< $@

bin/uv.bin.gz: bin/uv.bin
	gzip -f $<

bin/uv.bin: bin/uv
	$(CROSS_COMPILE)objcopy -O binary $< $@

bin/uv: $(OBJS)
	$(CC) $(LD_OPTS) -Wl,-Tuv.lds -o $@ $(OBJS) -lgcc

# compile and gen dependecy file
bin/%.o : src/%.c
	@$(MKDIR) $(@D)
	$(CC) -MD $(CC_OPTS) $(CC_OPTS_C) -c -o $@ $<

bin/%.o : src/%.S $(LIBOS_BIN)/assym.s
	@$(MKDIR) $(@D)
	$(CC) -MD $(CC_OPTS) $(CC_OPTS_ASM) -include $(LIBOS_BIN)/assym.s \
	-include $(LIBOS_CLIENT_H) -c -o $@ $<

bin/libfdt/%.o : $(LIBFDT_DIR)/%.c
	@$(MKDIR) $(@D)
	$(CC) -MD $(CC_OPTS) $(CC_OPTS_C) \
	-include include/libfdt_env.h -c -o $@ $<

bin/%.dtb : %.dts
	@$(MKDIR) $(@D)
	$(DTC_DIR)/dtc -p 1024 -O dtb $< -o $@

# include the dependecy files
-include bin/libos/libos_assym.d
-include $(OBJS:.o=.d)

bin/uv.map: bin/uv
	nm -n bin/uv > $@

.PHONY: test-gdb test-hello test-msgsnd test-vmpic test-linux-1p test-linux-2p

test-gdb: bin/uv.uImage test/gdb-test
	$(SIMICS) test/gdb-test/hv-gdb.simics

test-hello: bin/uv.uImage test/hello-test
	$(SIMICS) test/hello-test/hv-hello.simics

test-msgsnd: bin/uv.uImage test/msgsnd-test
	$(SIMICS) test/msgsnd-test/hv-msgsnd.simics

test-vmpic: bin/uv.uImage test/vmpic-test
	$(SIMICS) test/vmpic-test/hv-vmpic.simics

test-linux-1p: bin/uv.uImage test/linux
	$(SIMICS) test/linux/hv-linux-1p.simics

test-linux-2p: bin/uv.uImage test/linux
	$(SIMICS) test/linux/hv-linux-2p.simics

test-ipi-doorbell-1p: bin/uv.uImage test/ipi_doorbell-test
	$(SIMICS) test/ipi_doorbell-test/hv-ipi.simics

test-ipi-doorbell-2p: bin/uv.uImage test/ipi_doorbell-test
	$(SIMICS) test/ipi_doorbell-test/hv-ipi-2p.simics

test-fit: bin/uv.uImage test/fit-test
	$(SIMICS) test/fit-test/hv-fit.simics

test-byte-chan-test: bin/uv.uImage test/byte_chan-test
	$(SIMICS) test/byte_chan-test/hv-byte_chan.simics

demo: bin/uv.uImage test/demo
	$(SIMICS) test/demo/hv-demo.simics -e c

.PHONY: FORCE test
test/%: FORCE
	make -C $@

test:
	make -C $@

docs:
	doxygen doc/Doxyfile
