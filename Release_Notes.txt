
-------------------------------------------------------
Topaz Hypervisor Release Notes

Topaz Version: 0.2
Revsion: 0.2-rc6
Date: 7/11/2008

-------------------------------------------------------
Contents

1. Introduction
2. Compatibility/Dependencies
3. Detailed List of Changes
4. Limitations

-------------------------------------------------------
1.  Introduction

   This document identifies changes between Topaz 
   releases and a list of limitations.

-------------------------------------------------------
2.  Compatibility/Dependencies

   -Topaz 0.2-rc6
      -is compatible with Simics 8578 3.2.31 - 3.2.33
      -requires version 1.2.0-rc1 or newer of the
       device tree compiler (DTC).
      -requires libos tag v0.2-rc6

-------------------------------------------------------
3.  Detailed List of Changes

   -Topaz 0.2-rc6 bug fixes and changes
      -treat missing endpoints (byte-channels, doorbells)
       as fatal only for the current node
      -cleanup copyright header in source files
      -implement gdb G,m,M,p,P packets in the gdb stub
      -image updates for new u-boot
      -all references in hypervisor source, libos, and device
       trees to 8578 are renamed to p4080
      -ELF entry point handling (bug 1544) is fixed
      -convert DTS files to v1 (bug 1319) is fixed
      -bug 1574 is fixed-- coreint returns error on iack
      -misc unit test cleanup
      -bugs 1636, 1635, 1638, 1639 are Topaz spec issues and
       are fixed in 0.791 of the Topaz spec

   -Topaz 0.2-rc5 bug fixes and changes
      -Platform name in device tree changed from 8578 to p4080.
      -Improved ePAPR compliance
      -partman device tree fixes
      -The rootfs is no longer automatically updated with
       partman when building the Linux test, as this requires
       root access and has problems with root-squashed NFS.
      -Byte channel mux channels are range-checked.
      -Data path initialization is removed.
      -Fixed inverted return codes in guest register accessor.
      -POSIX error codes are used where appropriate.
      -Added FH_DMA_LIODN_GET hcall.
      -Added doxygen comments to hcalls.h.
      -Fixed a bug in strncpy() and strncat() that would
       call memset() with a length of -1.

   -Topaz 0.2-rc4 bug fixes and changes
      -r7 is now set to the size of the IMA (fixes bug 1543)
      -tlbivax functionality updates (bug 1527)
      -implement guest spr accesses for gdb stub (bug 1535)
      -MSR[CE] is set on secondary core (bug 1545) 
      -enble PMR access
      -"partman -s" now displays the partition name
      -Invalidate TLB1 entries in the guest array, not just
       the real one.
      -Reset VMPIC interrupts when a guest allocates them
      -tlbivax: invalidate TLB1 entries

   -Topaz 0.2-rc3
      -bug 1498 fixed
      -return invalid state rather than failed for start/stop hcalls. Fixes
       bugs 1522, 1523, 1524, 1526
      -don't set r3 in abort_guest_access unless an extable match is found.
      -gdb stub now has the ability to read some registers
       (registers with the value 0xdeadbeef are unimplemented)
      -the fsl,entry-cpu property is removed from the Topaz 0.78 spec 
       (resolves bugs 1495, 1496, 1497)

   -Topaz 0.2-rc2
      -removed CROSS_COMPILE from Makefiles
      -bug 1494 fixed - update fsl,hv-cpus property name
      -bug 1504 fixed - byte-channel TX interrupts hooked up to RX ints
      -bug 1500 fixed - set GESR[PIL] when reflecting illegal instruction
      -raise privileged instruction exception when guest user mode hcall is
       performed
      -unset GCPU_PEND_VIRQ when iacking a virq
      -cleaned up gdb stub is committed
      -build infrastructure for gdb stub

-------------------------------------------------------
4.  Limitations

 A. Open Bugs

 B. CPU Feature Limitations

   -MMU
      -invalid MMU mappings are permitted to be written into
       the TLB, and a machine check will occur on access to
       the mapping--  this is not implemented for TLB1.  Access
       to invalid TLB1 mappings will result in another TLB miss
      -If the guest-to-real address mapping is sufficiently
       misaligned, TLB1 entries can be depleted, causing
       a hypervisor panic.

   -physical addresses greater than 32 bits are not supported

   -CPU core performance monitor support
      -support for the CPU performance interrupt is not implemented

   -CPU core Debug support
      -CPU debug support is not implemented including all debug
       registers and interrupts
      -writes to debug SPRs are ignored

   -Cache control
      -the following cache control registers are not implemented
         L1CSR2
         L2CAPTDATAHI
         L2CAPTDATALO
         L2CAPTECC
         L2CSR0
         L2CSR1
         L2ERRADDR
         L2ERRATTR
         L2ERRCTL
         L2ERRDET
         L2ERRDIS
         L2ERREADDR
         L2ERRINJCTL
         L2ERRINJHI
         L2ERRINJLO
         L2ERRINTEN

   -Power management
      -support for the MSR[WE] power management bit is not
       implemented

   -"Guest debug mode" as defined by the Topaz spec is not
    implemented

   -"Guest cache lock mode" as defined by the Topaz spec is not
    implemented


 C. Platform Feature Limitations

   -Coherence subdomains
      -support for coherence subdomains is not implemented

   -L3 / Platform Cache configuration is not implemented

   -platform error interrupts
      -in the platform MPIC multiple error interrupts are multiplexed
       to interrupt 0.  De-multiplexing and routing of platform
       error interrupts to partitions is not implemented.

 D. Hypervisor Services Limitations

   -Partition Management
      -partition management interrupts (as specified in the
       Topaz spec) are not implemented:
         -partition state change 
         -watchdog expiration
         -restart request

   -Debug console
      -the hypervisor debug console is partially implemented
       and input is not supported

   -gdb stub
      -the gdb stub does not support the following:
         -breakpoints
         -single step
      -the gdb stub does not support hardware breakpoints or
       hardware watchpoints (not planne

 E. ePAPR Related Notes

    -The hypervisor does not currently comply with the ePAPR 
     ELF loading requirements with respect to the physical
     load address of the image.  The ET_EXEC and ET_DYN
     flags are ignored and the image is loaded at the specified
     address address (fsl,hv-load-image-table property or 
     partman utility)
