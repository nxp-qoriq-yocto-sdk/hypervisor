#
# Copyright (C) 2008 Freescale Semiconductor, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# UART0 is the hypervisor
# UART1 is Linux byte channel console
# UART2 is Linux serial console
$use_uart2 = 1

$guest_image[0]  = "vmlinux"
$guest_addr[0]   = 0x00100000
$guest_image[1]  = "rootfs.ext2.gz"
$guest_addr[1]   = 0x01000000

$kernel_image  = "hv.uImage"

$dev_tree_blob  = "hv-linux-1core.dtb"

add-directory "%script%" -prepend
add-directory "%script%/../sim" -prepend
add-directory "%script%/../sim/images" -prepend
add-directory "../bin" -prepend
add-directory "bin" -prepend
add-directory "bin/linux" -prepend

run-command-file "boot.simics"

run-python-file "exc.py"

$branch_count=1

script-branch {
	while $branch_count > 0 {
        	$con3:con.wait-for-string "BENCH START"
		@clear_stats()
        	cpu0.print-time
	}
}

script-branch {
	while $branch_count > 0 {
        	$con3:con.wait-for-string "BENCH STOP"
		@print_stat()
        	cpu0.print-time
	}
}
