if not defined freq_mhz      {$freq_mhz      = 1188}
if not defined memory_megs   {$memory_megs   = 2048}
if not defined cpu_cores     {$cpu_cores     = 8}
if not defined use_uart0     {$use_uart0     = 1}
if not defined use_uart1     {$use_uart1     = 1}
###

add-directory "%script%/images/"

load-module mpc8578-components
load-module memory-components
load-module std-components
load-module phy-components

$system = (create-simple-MPC8578-board cpu_cores = $cpu_cores
                                       cpu_frequency = $freq_mhz)

if $use_uart0 == 1 {
	$con1 = (create-std-text-console)
	$system.connect uart0 $con1
	# Terminal color & font, optionally settable
	if defined terminal_bg_color   {$con1->bg_color   = $terminal_bg_color}
	if defined terminal_fg_color   {$con1->fg_color   = $terminal_fg_color}
	if defined terminal_win32_font {$con1->win32_font = $terminal_win32_font}
	if defined terminal_x11_font   {$con1->x11_font   = $terminal_x11_font}
}

if $use_uart1 == 1 {
	$con2 = (create-std-text-console)
	$system.connect uart1 $con2
	# Terminal color & font, optionally settable
	if defined terminal_bg_color   {$con2->bg_color   = $terminal_bg_color}
	if defined terminal_fg_color   {$con2->fg_color   = $terminal_fg_color}
	if defined terminal_win32_font {$con2->win32_font = $terminal_win32_font}
	if defined terminal_x11_font   {$con2->x11_font   = $terminal_x11_font}
}

# Create ethernet PHYs and connect them to the MACs
foreach $phy_idx in (range 5) {
        # Create a generic MII transceiver identified as a Marvell 88E1011S
        $phy[$phy_idx] = (create-phy-mii-transceiver phy_id = 0x01410c60
                                                     mii_address = $phy_idx)
        $system.connect (phy + $phy_idx) $phy[$phy_idx]
}

# Create memory and connect it in the DIMM slots
# (2 slots, equal amount of memory in each slot ($memory_megs/2))
create-and-connect-ddr-memory $system $memory_megs "AA"

