config PROJECTVERSION
	string
	option env="PROJECTVERSION"

config MAJORVERSION
	int
	option env="VERSION"

config SUBVERSION
	int
	option env="SUBVERSION"

config HV_VERSION
	string
	default PROJECTVERSION

config HV_MAJOR_VERSION
	int
	default MAJORVERSION

config HV_MINOR_VERSION
	int
	default SUBVERSION

source "libos/lib/Kconfig"

config LIBOS_DEPS
	bool
	default y
	select LIBOS_INIT
	select LIBOS_EXCEPTION
	select LIBOS_LIBC
	select LIBOS_MALLOC
	select LIBOS_FSL_BOOKE_TLB
	select LIBOS_MPIC
	select LIBOS_CONSOLE
	select LIBOS_MP
	select LIBOS_VIRT_ALLOC
	select LIBOS_DRIVER_MODEL
	select LIBOS_THREADS
	select LIBOS_SCHED_API
	select LIBOS_CRITICAL_INTS

config BYTE_CHAN
	bool "Byte-channel support"
	select LIBOS_QUEUE
	help
		Byte channels are a bidirectional pipe mechanism that
		allows communication between guests, character devices,
		multiplexers, and other components.

config BCMUX
	bool "Byte-channel multiplexer"
	depends on BYTE_CHAN
	help
		Byte channel multiplexing creates virtual channels over
		a single combined byte channel.  It is useful for, among
		other things, sharing a single serial port for the
		consoles of all guests.

config SHELL
	bool "Command-line shell"
	select LIBOS_QUEUE
	select LIBOS_READLINE
	help
		A command-line shell with various debugging and
		configuration commands.

config PAMU
	bool "PAMU/IOMMU support"
	select LIBOS_PAMU
	help
		Provides support for Peripheral Access Management Unit.

config TLB_CACHE
	bool "Cache TLB entries"
	help
		Rather than sending TLB misses directly to the guest,
		a larger TLB is maintained by the hypervisor in software,
		from which the hypervisor satisfies most TLB misses.  Only
		when an access misses the larger TLB cache will the guest's
		TLB miss handler be invoked.
		
		Besides improving performance, this option removes
		restrictions on size and alignment of TLB1 entries, and
		improves the handling of access holes within TLB1 entries.

		The cost of this option with the default cache size is
		256KiB per core, and the possibility of some small added
		latency when accessing pages that the guest believes are
		pinned to TLB1.

config DEVICE_VIRT
	# Core support for device virtualization.  Enable this if you
	# want to be able to virtual devices that share a page or
	# interrupt, like I2C.
	bool

config VIRTUAL_I2C
	bool "I2C virtualization"
	select DEVICE_VIRT
	help
		Enable this option if you want access to I2C devices
		to be protected across partitions.  The I2C block
		has two I2C controllers on it.  The two controllers share
		the same page of memory and the same interrupt number.
		This feature enables protection of the memory space and
		virtualization of the interrupts, so that one I2C
		controller can be assigned to one partition, and the other
		I2C controller can be assigned to another partition, and
		neither partition will be able to access the I2C registers
		of the other.

config STATISTICS
	bool "Hypervisor statistics"
	help
		Detailed hypervisor emulated instruction statistics.
		Gives a count of emulated instructions executed.

config DEBUG_STUB
	bool "Debug Stub Support"
	depends on BYTE_CHAN
	help
		Enable debug stub support.  This allows you to debug the guest
		remotely with a host debugger.

config GDB_STUB
	bool "GDB Stub Support"
	depends on DEBUG_STUB
	help
		Enable GDB stub support.  This allows you to debug the guest 
		remotely with GDB.  The stub is located in the hypervisor, 
		allowing non-intrusive debugging.

config DEBUG_STUB_PROGRAM_INTERRUPT
	bool "Use program interrupt for debugging"
	depends on DEBUG_STUB
	help
		Specifies that the debug stub should use program interrupts
		instead of the debug interrupt for debugging.  Use this 
		option to enable guest debugging with a debug stub at the
		same time 'guest debug mode' has been granted to a guest.
		NOTE: program interrupt debugging has limitations in an
		SMP partition.
