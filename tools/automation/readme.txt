# Copyright (C) 2010 Freescale Semiconductor, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

HV Unit Test Automation - User Manual
=====================================

Requirements:

- python - 2.4 or higher (includes pexpect 2.3)
- simics 4.4 with Simics Base, P5020, P4080, P30x0
- one p4080ds board available (in boardfarm)
- sdk.git (built)
- hypervisor.git under test

Running automation on simulator
===============================

- build hypervisor under test
	make defconfig
	make
- build unit tests
	make test
- create rootfs for special linux cases
	make test-linux-pre-hello
	make test-linux-pre-partman
- build mux_server
	in tools/mux_server:  make mux_server
- make sure that virtual eth are set for simics connections
- (optional) update common.py with custom values (e.g. other log path or test ip addr)
- check the test set to enable/disable tests in test_plan_*.txt
- start a test session:
	in tools/automation:
	./run_plan.py test_plan_p4080ds.txt p4080ds (or other targets)
- for each test the following information is printed on screen:
	- python command that can be issued to manually run one test case
	- the time elapsed for current test
- at the end of a session, a csv report is generated in tools/automation:
	e.g. p4080ds_results.txt
- the logs contain the output of
	mux server
	simics
	boot/hv console
	other consoles

Running automation on a board
=============================

- build hypervisor under test
	make defconfig
	make
- build unit tests
	make test
- create rootfs for special linux cases
	make test-linux-pre-hello
	make test-linux-pre-partman
	note: currently, rootfs for these tests does not fit into allocated flash
- claim the board
- connect to board and write to flash the following:
	uboot
	rcw
	hv image
	hw devtree
	linux image
	linux rootfs
- disconnect the skermit session
- update common.py with custom values (depending on board, server, user, etc.)
- copy (tar.gz-ed) the test binaries output (e.g. output/test32/bin) to the remote tftpboot folder
- for simtst copy also the config device trees to simtst folder (e.g. images/boot/p4080ds/R_PPSXN_0x10/*.dtb)
- check the test set to enable/disable tests in test_plan_*_hw.txt
- start a test session:
	in tools/automation:
	./run_plan.py test_plan_p4080ds_hw.txt p4080ds_hw (or other targets)
- for each test the following information is printed on screen:
	- python command that can be issued to manually run one test case
	- the time elapsed for current test
- at the end of a session, a csv report is generated in tools/automation:
	e.g. p4080ds_results.txt
- when all the reports are ready, a tabular report can be generated by:
	./run_report.py
- the logs contain the output of
	remote mux server
	boot/hv console
	other consoles



Final report:
=============
When all the reports are ready, a tabular report can be generated by:
	./run_report.py
